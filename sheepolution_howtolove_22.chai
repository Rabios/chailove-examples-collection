// https://sheepolution.com/learn/book/18
global image
global tilemap
global width
global height
global quads
global player

def load() {
  image = love.graphics.newImage("assets/tileset.png")

  var image_width = image.getWidth()
  var image_height = image.getHeight()
  width = (image_width / 3) - 2
  height = (image_height / 2) - 2

  quads = []

  for (var i = 0; i < 2; ++i) {
    for (var j = 0; j < 3; ++j) {
      quads.push_back(love.graphics.newQuad(j * (width + 2), i * (height + 2), width, height, image_width, image_height))
    }
  }

  tilemap = [
    [ 6, 5, 5, 1, 6, 5, 5, 1 ],
    [ 2, 6, 6, 3, 4, 6, 6, 2 ],
    [ 2, 6, 6, 6, 6, 6, 6, 2 ],
    [ 3, 1, 6, 6, 6, 6, 6, 4 ],
    [ 6, 4, 6, 6, 6, 6, 3, 1 ],
    [ 2, 6, 6, 6, 6, 6, 6, 2 ],
    [ 2, 6, 6, 6, 1, 6, 6, 2 ],
    [ 3, 5, 5, 4, 3, 5, 5, 4 ]
  ]

  // Create our player
  player = Dynamic_Object()
  player.image = love.graphics.newImage("assets/player.png")
  player.tile_x = 2
  player.tile_y = 2
}

def draw() {
  for (var i = 0; i < tilemap.size(); ++i) {
    for (var j = 0; j < tilemap[i].size(); ++j) {
      if (!(tilemap[i][j] == tilemap.size())) {
        love.graphics.draw(image, quads[tilemap[i][j]], j * width, i * height)
	  }
    }
  }

  // Draw the player and multiple its tile position with the tile width and height
  love.graphics.draw(player.image, player.tile_x * width, player.tile_y * height)
}

def isEmpty(x, y) {
  return (tilemap[y][x] == tilemap.size())
}

def keypressed(key) {
  var x = player.tile_x
  var y = player.tile_y

  if (key == "left") {
    x -= 1
  } else if (key == "right") {
    x += 1
  } else if (key == "up") {
    y -= 1
  } else if (key == "down") {
    y += 1
  }

  if (isEmpty(x, y)) {
    player.tile_x = x
    player.tile_y = y
  }
}